{
  "version": 3,
  "sources": ["../node_modules/toastify-js/src/toastify.js", "../src/utils.ts", "../src/imageRuler.ts", "../src/copyable.ts", "../src/index.ts"],
  "sourcesContent": [
    "/*!\n * Toastify js 1.12.0\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.12.0\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    ariaLive: 'polite',\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.ariaLive = options.ariaLive || Toastify.defaults.ariaLive;\n      this.options.style = options.style || Toastify.defaults.style;\n      if(options.backgroundColor) {\n        this.options.style.background = options.backgroundColor;\n      }\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Announce the toast to screen readers\n      if (this.options.ariaLive) {\n        divElement.setAttribute('aria-live', this.options.ariaLive)\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"button\");\n        closeElement.type = \"button\";\n        closeElement.setAttribute(\"aria-label\", \"Close\");\n        closeElement.className = \"toast-close\";\n        closeElement.innerHTML = \"&#10006;\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n",
    "export const percentages = (totalImageH: number, values: number[]): number[] => values.map(v => (v / totalImageH) * 100);",
    "import {percentages} from \"./utils\";\n\ninterface Ruler {\n    y: number;\n    height: number;\n    percentage: number;\n}\n\nexport class ImageRuler {\n    private canvas: HTMLCanvasElement;\n    private ctx: CanvasRenderingContext2D;\n    private dropZone: HTMLElement;\n    private fileInput: HTMLInputElement;\n    private previewLine: HTMLElement;\n    private clearBtn: HTMLButtonElement;\n    private undoBtn: HTMLButtonElement;\n    private rulersList: HTMLElement;\n    private imageInfo: HTMLElement;\n\n    private currentImage: HTMLImageElement | null = null;\n    private rulers: Ruler[] = [];\n    private imageScale = 1;\n    private imageOffsetX = 0;\n    private imageOffsetY = 0;\n    private displayedImageWidth = 0;\n    private displayedImageHeight = 0;\n\n    constructor() {\n        this.canvas = document.getElementById('imageCanvas') as HTMLCanvasElement;\n        this.ctx = this.canvas.getContext('2d')!;\n        this.dropZone = document.getElementById('dropZone')!;\n        this.fileInput = document.getElementById('fileInput') as HTMLInputElement;\n        this.previewLine = document.getElementById('previewLine')!;\n        this.clearBtn = document.getElementById('clearBtn') as HTMLButtonElement;\n        this.undoBtn = document.getElementById('undoBtn') as HTMLButtonElement;\n        this.rulersList = document.getElementById('rulersList')!;\n        this.imageInfo = document.getElementById('imageInfo')!;\n\n        this.initializeEventListeners();\n    }\n\n    private initializeEventListeners(): void {\n        // Drag and drop\n        this.dropZone.addEventListener('dragover', this.handleDragOver.bind(this));\n        this.dropZone.addEventListener('dragleave', this.handleDragLeave.bind(this));\n        this.dropZone.addEventListener('drop', this.handleDrop.bind(this));\n\n        // Click to browse files\n        this.dropZone.addEventListener('click', this.handleDropZoneClick.bind(this));\n        this.fileInput.addEventListener('change', this.handleFileSelect.bind(this));\n\n        // Paste\n        document.addEventListener('paste', this.handlePaste.bind(this));\n\n        // Canvas clicks\n        this.canvas.addEventListener('click', this.handleCanvasClick.bind(this));\n        this.canvas.addEventListener('mousemove', this.handleCanvasMouseMove.bind(this));\n        this.canvas.addEventListener('mouseleave', this.handleCanvasMouseLeave.bind(this));\n\n        // Buttons\n        this.clearBtn.addEventListener('click', this.clearRulers.bind(this));\n        this.undoBtn.addEventListener('click', this.undoLastRuler.bind(this));\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n        // Window resize\n        window.addEventListener('resize', this.handleResize.bind(this));\n    }\n\n    private handleDragOver(e: DragEvent): void {\n        e.preventDefault();\n        this.dropZone.classList.add('drag-over');\n    }\n\n    private handleDragLeave(e: DragEvent): void {\n        e.preventDefault();\n        this.dropZone.classList.remove('drag-over');\n    }\n\n    private handleDrop(e: DragEvent): void {\n        e.preventDefault();\n        this.dropZone.classList.remove('drag-over');\n\n        const files = e.dataTransfer?.files;\n        if (files && files.length > 0) {\n            this.loadImageFile(files[0]!);\n        }\n    }\n\n    private handleDropZoneClick(e: MouseEvent): void {\n        console.log('Drop zone clicked!'); // Debug log\n        e.preventDefault();\n        e.stopPropagation();\n\n        console.log('Triggering file input...'); // Debug log\n        this.fileInput.click();\n    }\n\n    private handleFileSelect(e: Event): void {\n        console.log('File input changed!'); // Debug log\n        const target = e.target as HTMLInputElement;\n        const files = target.files;\n        console.log('Selected files:', files); // Debug log\n        if (files && files.length > 0) {\n            console.log('Loading file:', files[0]!.name); // Debug log\n            this.loadImageFile(files[0]!);\n            // Clear the input so the same file can be selected again\n            target.value = '';\n        }\n    }\n\n    private handlePaste(e: ClipboardEvent): void {\n        const items = e.clipboardData?.items;\n        if (!items) return;\n\n        for (const item of Array.from(items)) {\n            if (item.type.startsWith('image/')) {\n                const file = item.getAsFile();\n                if (file) {\n                    this.loadImageFile(file);\n                    break;\n                }\n            }\n        }\n    }\n\n    private handleCanvasClick(e: MouseEvent): void {\n        if (!this.currentImage) return;\n\n        const rect = this.canvas.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n\n        // Convert to image coordinates\n        const imageY = (y - this.imageOffsetY) / this.imageScale;\n\n        // Check if click is within image bounds\n        if (imageY >= 0 && imageY <= this.currentImage.naturalHeight) {\n            this.addRuler(imageY);\n        }\n    }\n\n    private handleCanvasMouseMove(e: MouseEvent): void {\n        if (!this.currentImage) return;\n\n        const rect = this.canvas.getBoundingClientRect();\n        const y = e.clientY - rect.top;\n\n        // Convert to image coordinates\n        const imageY = (y - this.imageOffsetY) / this.imageScale;\n\n        // Show preview line if within image bounds\n        if (imageY >= 0 && imageY <= this.currentImage.naturalHeight) {\n            this.previewLine.style.display = 'block';\n            this.previewLine.style.top = `${y}px`;\n        } else {\n            this.previewLine.style.display = 'none';\n        }\n    }\n\n    private handleCanvasMouseLeave(): void {\n        this.previewLine.style.display = 'none';\n    }\n\n    private handleKeyDown(e: KeyboardEvent): void {\n        if (e.key === 'Escape') {\n            this.clearRulers();\n        } else if ((e.ctrlKey || e.metaKey) && e.key === 'z') {\n            e.preventDefault();\n            this.undoLastRuler();\n        }\n    }\n\n    private handleResize(): void {\n        if (this.currentImage) {\n            this.drawImage();\n        }\n    }\n\n    private loadImageFile(file: File): void {\n        if (!file.type.startsWith('image/')) {\n            alert('Please select a valid image file.');\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const img = new Image();\n            img.onload = () => {\n                this.currentImage = img;\n                this.clearRulers();\n                this.drawImage();\n                this.updateImageInfo();\n                this.showCanvas();\n            };\n            img.src = e.target?.result as string;\n        };\n        reader.readAsDataURL(file);\n    }\n\n    private showCanvas(): void {\n        this.dropZone.style.display = 'none';\n        this.canvas.style.display = 'block';\n    }\n\n    private drawImage(): void {\n        if (!this.currentImage) return;\n\n        const containerRect = this.canvas.parentElement!.getBoundingClientRect();\n        const maxWidth = containerRect.width - 40; // Account for padding\n        const maxHeight = window.innerHeight - 250; // Reduced from 300 to allow more space\n\n\n        // Calculate scale to fit image while preserving aspect ratio\n        const scaleX = maxWidth / this.currentImage.naturalWidth;\n        const scaleY = maxHeight / this.currentImage.naturalHeight;\n        // Allow scaling up to 2x for small images, and ensure minimum scale of 0.5\n        const minScale = 0.5;\n        const maxScale = 2;\n        this.imageScale = Math.max(minScale, Math.min(scaleX, scaleY, maxScale));\n\n        this.displayedImageWidth = this.currentImage.naturalWidth * this.imageScale;\n        this.displayedImageHeight = this.currentImage.naturalHeight * this.imageScale;\n\n        // Set canvas size to displayed image size\n        this.canvas.width = this.displayedImageWidth;\n        this.canvas.height = this.displayedImageHeight;\n\n        // Calculate centering offsets\n        this.imageOffsetX = 0;\n        this.imageOffsetY = 0;\n\n        // Clear and draw image\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.drawImage(\n            this.currentImage,\n            0, 0,\n            this.displayedImageWidth,\n            this.displayedImageHeight\n        );\n\n        // Redraw rulers\n        this.drawRulers();\n    }\n\n    private addRuler(imageY: number): void {\n        // Round to avoid floating point precision issues\n        imageY = Math.round(imageY);\n\n        // Check for near-duplicate rulers (within 3 pixels)\n        const existingRuler = this.rulers.find(r => Math.abs(r.y - imageY) < 3);\n        if (existingRuler) return;\n\n        // Calculate height from previous ruler or top of image\n        const previousY = this.rulers.length > 0 ? this.rulers[this.rulers.length - 1]!.y : 0;\n        const height = imageY - previousY;\n\n        // Calculate percentage\n        const percentage = percentages(this.currentImage!.naturalHeight, [height])[0]!;\n\n        const ruler: Ruler = {\n            y: imageY,\n            height: height,\n            percentage: percentage\n        };\n\n        this.rulers.push(ruler);\n        this.updateRulersList();\n        this.updateButtonStates();\n        this.drawRulers();\n    }\n\n    private drawRulers(): void {\n        if (!this.currentImage) return;\n\n        // Remove existing ruler elements\n        const existingRulers = this.canvas.parentElement!.querySelectorAll('.ruler-line, .ruler-label');\n        existingRulers.forEach(el => el.remove());\n\n        this.rulers.forEach((ruler, index) => {\n            const displayY = ruler.y * this.imageScale + this.imageOffsetY;\n\n            // Create ruler line\n            const line = document.createElement('div');\n            line.className = 'ruler-line placed';\n            line.style.top = `${displayY}px`;\n            this.canvas.parentElement!.appendChild(line);\n\n            // Create ruler label\n            const label = document.createElement('div');\n            label.className = 'ruler-label';\n            label.style.top = `${displayY - 15}px`;\n            label.style.left = `${this.displayedImageWidth + 10}px`;\n            label.innerHTML = `y: <span class=\"ruler-y\">${ruler.y}px</span> — h: <span class=\"ruler-height\">${ruler.height}px</span> — <span class=\"ruler-percentage\">${ruler.percentage.toFixed(3)}%</span>`;\n\n            this.canvas.parentElement!.appendChild(label);\n        });\n    }\n\n    private updateRulersList(): void {\n        if (this.rulers.length === 0) {\n            this.rulersList.innerHTML = '<p class=\"no-rulers\">No rulers placed yet</p>';\n            return;\n        }\n\n        let html = '';\n        this.rulers.forEach((ruler, index) => {\n            html += `\n        <div class=\"ruler-item\">\n          <div class=\"ruler-index\">Ruler ${index + 1}</div>\n          <div class=\"ruler-details\">\n            y: <span class=\"ruler-y\">${ruler.y}px</span> h: <span class=\"ruler-height\">${ruler.height}px</span> %: <span data-copyable class=\"ruler-percentage\">${ruler.percentage / 100}</span>\n          </div>\n        </div>\n      `;\n        });\n\n        this.rulersList.innerHTML = html;\n    }\n\n    private updateImageInfo(): void {\n        if (!this.currentImage) {\n            this.imageInfo.innerHTML = '<p>No image loaded</p>';\n            return;\n        }\n\n        this.imageInfo.innerHTML = `\n      <div><span class=\"info-label\">Original Size:</span><span class=\"info-value\">${this.currentImage.naturalWidth} × ${this.currentImage.naturalHeight}px</span></div>\n      <div><span class=\"info-label\">Displayed Size:</span><span class=\"info-value\">${Math.round(this.displayedImageWidth)} × ${Math.round(this.displayedImageHeight)}px</span></div>\n      <div><span class=\"info-label\">Scale Factor:</span><span class=\"info-value\">${(this.imageScale * 100).toFixed(1)}%</span></div>\n      <div><span class=\"info-label\">Rulers:</span><span class=\"info-value\">${this.rulers.length}</span></div>\n    `;\n    }\n\n    private updateButtonStates(): void {\n        this.clearBtn.disabled = this.rulers.length === 0;\n        this.undoBtn.disabled = this.rulers.length === 0;\n        this.updateImageInfo();\n    }\n\n    private clearRulers(): void {\n        this.rulers = [];\n        this.updateRulersList();\n        this.updateButtonStates();\n        this.drawRulers();\n    }\n\n    private undoLastRuler(): void {\n        if (this.rulers.length > 0) {\n            this.rulers.pop();\n            this.updateRulersList();\n            this.updateButtonStates();\n            this.drawRulers();\n        }\n    }\n}\n",
    "import Toastify from \"toastify-js\";\n\nclass Copyable {\n    constructor() {\n        this.init();\n    }\n\n    init() {\n        // Use event delegation to handle clicks on any element with data-copyable\n        // This works for both existing and dynamically added elements\n        document.addEventListener('click', (event) => {\n            const target = event.target as Element;\n\n            // Check if the clicked element or any of its parents has data-copyable\n            let copyableElement = target.closest('[data-copyable]');\n\n            if (copyableElement) {\n                navigator.clipboard.writeText(copyableElement.textContent || '');\n                Toastify({\n                    text: \"Copied to clipboard\",\n                    duration: 5000,\n                    gravity: \"bottom\",\n                    position: \"right\",\n                    style: {\n                        background: \"var(--a6d189)\",\n                        color: \"var(--surface1)\",\n                    },\n                }).showToast();\n            }\n        });\n    }\n}\n\nexport {Copyable};",
    "import {ImageRuler} from \"./imageRuler\";\nimport {Copyable} from \"./copyable\";\nimport Toastify from 'toastify-js'\n\n// Initialize the application when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    new ImageRuler();\n    new Copyable();\n    Toastify({\n        text: \"Welcome to the Image Ruler\",\n        duration: 5000,\n        gravity: \"bottom\",\n        position: \"right\",\n        style: {\n            background: \"var(--rosewater)\",\n            color: \"var(--surface1)\",\n        },\n    }).showToast();\n});"
  ],
  "mappings": "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",
  "debugId": "DB6DA0D7B1F35DC664756E2164756E21",
  "names": []
}