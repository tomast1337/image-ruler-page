{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": [
    "// Percentages helper function as specified\nfunction percentages(totalImageH: number, values: number[]): number[] {\n    return values.map(v => (v / totalImageH) * 100);\n}\n\ninterface Ruler {\n    y: number;\n    height: number;\n    percentage: number;\n}\n\nclass ImageRuler {\n    private canvas: HTMLCanvasElement;\n    private ctx: CanvasRenderingContext2D;\n    private dropZone: HTMLElement;\n    private fileInput: HTMLInputElement;\n    private previewLine: HTMLElement;\n    private clearBtn: HTMLButtonElement;\n    private undoBtn: HTMLButtonElement;\n    private rulersList: HTMLElement;\n    private imageInfo: HTMLElement;\n\n    private currentImage: HTMLImageElement | null = null;\n    private rulers: Ruler[] = [];\n    private imageScale = 1;\n    private imageOffsetX = 0;\n    private imageOffsetY = 0;\n    private displayedImageWidth = 0;\n    private displayedImageHeight = 0;\n\n    constructor() {\n        this.canvas = document.getElementById('imageCanvas') as HTMLCanvasElement;\n        this.ctx = this.canvas.getContext('2d')!;\n        this.dropZone = document.getElementById('dropZone')!;\n        this.fileInput = document.getElementById('fileInput') as HTMLInputElement;\n        this.previewLine = document.getElementById('previewLine')!;\n        this.clearBtn = document.getElementById('clearBtn') as HTMLButtonElement;\n        this.undoBtn = document.getElementById('undoBtn') as HTMLButtonElement;\n        this.rulersList = document.getElementById('rulersList')!;\n        this.imageInfo = document.getElementById('imageInfo')!;\n\n        this.initializeEventListeners();\n    }\n\n    private initializeEventListeners(): void {\n        // Drag and drop\n        this.dropZone.addEventListener('dragover', this.handleDragOver.bind(this));\n        this.dropZone.addEventListener('dragleave', this.handleDragLeave.bind(this));\n        this.dropZone.addEventListener('drop', this.handleDrop.bind(this));\n\n        // Click to browse files\n        this.dropZone.addEventListener('click', this.handleDropZoneClick.bind(this));\n        this.fileInput.addEventListener('change', this.handleFileSelect.bind(this));\n\n        // Paste\n        document.addEventListener('paste', this.handlePaste.bind(this));\n\n        // Canvas clicks\n        this.canvas.addEventListener('click', this.handleCanvasClick.bind(this));\n        this.canvas.addEventListener('mousemove', this.handleCanvasMouseMove.bind(this));\n        this.canvas.addEventListener('mouseleave', this.handleCanvasMouseLeave.bind(this));\n\n        // Buttons\n        this.clearBtn.addEventListener('click', this.clearRulers.bind(this));\n        this.undoBtn.addEventListener('click', this.undoLastRuler.bind(this));\n\n        // Keyboard shortcuts\n        document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n        // Window resize\n        window.addEventListener('resize', this.handleResize.bind(this));\n    }\n\n    private handleDragOver(e: DragEvent): void {\n        e.preventDefault();\n        this.dropZone.classList.add('drag-over');\n    }\n\n    private handleDragLeave(e: DragEvent): void {\n        e.preventDefault();\n        this.dropZone.classList.remove('drag-over');\n    }\n\n    private handleDrop(e: DragEvent): void {\n        e.preventDefault();\n        this.dropZone.classList.remove('drag-over');\n\n        const files = e.dataTransfer?.files;\n        if (files && files.length > 0) {\n            this.loadImageFile(files[0]!);\n        }\n    }\n\n    private handleDropZoneClick(e: MouseEvent): void {\n        console.log('Drop zone clicked!'); // Debug log\n        e.preventDefault();\n        e.stopPropagation();\n\n        console.log('Triggering file input...'); // Debug log\n        this.fileInput.click();\n    }\n\n    private handleFileSelect(e: Event): void {\n        console.log('File input changed!'); // Debug log\n        const target = e.target as HTMLInputElement;\n        const files = target.files;\n        console.log('Selected files:', files); // Debug log\n        if (files && files.length > 0) {\n            console.log('Loading file:', files[0]!.name); // Debug log\n            this.loadImageFile(files[0]!);\n            // Clear the input so the same file can be selected again\n            target.value = '';\n        }\n    }\n\n    private handlePaste(e: ClipboardEvent): void {\n        const items = e.clipboardData?.items;\n        if (!items) return;\n\n        for (const item of Array.from(items)) {\n            if (item.type.startsWith('image/')) {\n                const file = item.getAsFile();\n                if (file) {\n                    this.loadImageFile(file);\n                    break;\n                }\n            }\n        }\n    }\n\n    private handleCanvasClick(e: MouseEvent): void {\n        if (!this.currentImage) return;\n\n        const rect = this.canvas.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n\n        // Convert to image coordinates\n        const imageY = (y - this.imageOffsetY) / this.imageScale;\n\n        // Check if click is within image bounds\n        if (imageY >= 0 && imageY <= this.currentImage.naturalHeight) {\n            this.addRuler(imageY);\n        }\n    }\n\n    private handleCanvasMouseMove(e: MouseEvent): void {\n        if (!this.currentImage) return;\n\n        const rect = this.canvas.getBoundingClientRect();\n        const y = e.clientY - rect.top;\n\n        // Convert to image coordinates\n        const imageY = (y - this.imageOffsetY) / this.imageScale;\n\n        // Show preview line if within image bounds\n        if (imageY >= 0 && imageY <= this.currentImage.naturalHeight) {\n            this.previewLine.style.display = 'block';\n            this.previewLine.style.top = `${y}px`;\n        } else {\n            this.previewLine.style.display = 'none';\n        }\n    }\n\n    private handleCanvasMouseLeave(): void {\n        this.previewLine.style.display = 'none';\n    }\n\n    private handleKeyDown(e: KeyboardEvent): void {\n        if (e.key === 'Escape') {\n            this.clearRulers();\n        } else if ((e.ctrlKey || e.metaKey) && e.key === 'z') {\n            e.preventDefault();\n            this.undoLastRuler();\n        }\n    }\n\n    private handleResize(): void {\n        if (this.currentImage) {\n            this.drawImage();\n        }\n    }\n\n    private loadImageFile(file: File): void {\n        if (!file.type.startsWith('image/')) {\n            alert('Please select a valid image file.');\n            return;\n        }\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const img = new Image();\n            img.onload = () => {\n                this.currentImage = img;\n                this.clearRulers();\n                this.drawImage();\n                this.updateImageInfo();\n                this.showCanvas();\n            };\n            img.src = e.target?.result as string;\n        };\n        reader.readAsDataURL(file);\n    }\n\n    private showCanvas(): void {\n        this.dropZone.style.display = 'none';\n        this.canvas.style.display = 'block';\n    }\n\n    private drawImage(): void {\n        if (!this.currentImage) return;\n\n        const containerRect = this.canvas.parentElement!.getBoundingClientRect();\n        const maxWidth = containerRect.width - 40; // Account for padding\n        const maxHeight = window.innerHeight - 250; // Reduced from 300 to allow more space\n\n        // Calculate scale to fit image while preserving aspect ratio\n        const scaleX = maxWidth / this.currentImage.naturalWidth;\n        const scaleY = maxHeight / this.currentImage.naturalHeight;\n        // Allow scaling up to 2x for small images, and ensure minimum scale of 0.5\n        const minScale = 0.5;\n        const maxScale = 2.0;\n        this.imageScale = Math.max(minScale, Math.min(scaleX, scaleY, maxScale));\n\n        this.displayedImageWidth = this.currentImage.naturalWidth * this.imageScale;\n        this.displayedImageHeight = this.currentImage.naturalHeight * this.imageScale;\n\n        // Set canvas size to displayed image size\n        this.canvas.width = this.displayedImageWidth;\n        this.canvas.height = this.displayedImageHeight;\n\n        // Calculate centering offsets\n        this.imageOffsetX = 0;\n        this.imageOffsetY = 0;\n\n        // Clear and draw image\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.drawImage(\n            this.currentImage,\n            0, 0,\n            this.displayedImageWidth,\n            this.displayedImageHeight\n        );\n\n        // Redraw rulers\n        this.drawRulers();\n    }\n\n    private addRuler(imageY: number): void {\n        // Round to avoid floating point precision issues\n        imageY = Math.round(imageY);\n\n        // Check for near-duplicate rulers (within 3 pixels)\n        const existingRuler = this.rulers.find(r => Math.abs(r.y - imageY) < 3);\n        if (existingRuler) return;\n\n        // Calculate height from previous ruler or top of image\n        const previousY = this.rulers.length > 0 ? this.rulers[this.rulers.length - 1]!.y : 0;\n        const height = imageY - previousY;\n\n        // Calculate percentage\n        const percentage = percentages(this.currentImage!.naturalHeight, [height])[0]!;\n\n        const ruler: Ruler = {\n            y: imageY,\n            height: height,\n            percentage: percentage\n        };\n\n        this.rulers.push(ruler);\n        this.updateRulersList();\n        this.updateButtonStates();\n        this.drawRulers();\n    }\n\n    private drawRulers(): void {\n        if (!this.currentImage) return;\n\n        // Remove existing ruler elements\n        const existingRulers = this.canvas.parentElement!.querySelectorAll('.ruler-line, .ruler-label');\n        existingRulers.forEach(el => el.remove());\n\n        this.rulers.forEach((ruler, index) => {\n            const displayY = ruler.y * this.imageScale + this.imageOffsetY;\n\n            // Create ruler line\n            const line = document.createElement('div');\n            line.className = 'ruler-line placed';\n            line.style.top = `${displayY}px`;\n            this.canvas.parentElement!.appendChild(line);\n\n            // Create ruler label\n            const label = document.createElement('div');\n            label.className = 'ruler-label';\n            label.style.top = `${displayY - 15}px`;\n            label.style.left = `${this.displayedImageWidth + 10}px`;\n            label.innerHTML = `y: <span class=\"ruler-y\">${ruler.y}px</span> — h: <span class=\"ruler-height\">${ruler.height}px</span> — <span class=\"ruler-percentage\">${ruler.percentage.toFixed(3)}%</span>`;\n\n            this.canvas.parentElement!.appendChild(label);\n        });\n    }\n\n    private updateRulersList(): void {\n        if (this.rulers.length === 0) {\n            this.rulersList.innerHTML = '<p class=\"no-rulers\">No rulers placed yet</p>';\n            return;\n        }\n\n        let html = '';\n        this.rulers.forEach((ruler, index) => {\n            html += `\n        <div class=\"ruler-item\">\n          <div class=\"ruler-index\">Ruler ${index + 1}</div>\n          <div class=\"ruler-details\">\n            y: <span class=\"ruler-y\">${ruler.y}px</span><br>\n            h: <span class=\"ruler-height\">${ruler.height}px</span><br>\n            %: <span class=\"ruler-percentage\">${ruler.percentage.toFixed(3)}%</span>\n          </div>\n        </div>\n      `;\n        });\n\n        this.rulersList.innerHTML = html;\n    }\n\n    private updateImageInfo(): void {\n        if (!this.currentImage) {\n            this.imageInfo.innerHTML = '<p>No image loaded</p>';\n            return;\n        }\n\n        this.imageInfo.innerHTML = `\n      <div><span class=\"info-label\">Original Size:</span><span class=\"info-value\">${this.currentImage.naturalWidth} × ${this.currentImage.naturalHeight}px</span></div>\n      <div><span class=\"info-label\">Displayed Size:</span><span class=\"info-value\">${Math.round(this.displayedImageWidth)} × ${Math.round(this.displayedImageHeight)}px</span></div>\n      <div><span class=\"info-label\">Scale Factor:</span><span class=\"info-value\">${(this.imageScale * 100).toFixed(1)}%</span></div>\n      <div><span class=\"info-label\">Rulers:</span><span class=\"info-value\">${this.rulers.length}</span></div>\n    `;\n    }\n\n    private updateButtonStates(): void {\n        this.clearBtn.disabled = this.rulers.length === 0;\n        this.undoBtn.disabled = this.rulers.length === 0;\n        this.updateImageInfo();\n    }\n\n    private clearRulers(): void {\n        this.rulers = [];\n        this.updateRulersList();\n        this.updateButtonStates();\n        this.drawRulers();\n    }\n\n    private undoLastRuler(): void {\n        if (this.rulers.length > 0) {\n            this.rulers.pop();\n            this.updateRulersList();\n            this.updateButtonStates();\n            this.drawRulers();\n        }\n    }\n}\n\n// Initialize the application when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    new ImageRuler();\n});"
  ],
  "mappings": "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",
  "debugId": "1E998F6C81B674B364756E2164756E21",
  "names": []
}